/***********************************************************************************************//**
 *  Container and manager of activities known or generated by a single Agent.
 *  @class      ActivityHandler
 *  @authors    Carles Araguz (CA), carles.araguz@upc.edu
 *  @date       2018-sep-26
 *  @version    0.1
 *  @copyright  This file is part of a project developed by Nano-Satellite and Payload Laboratory
 *              (NanoSat Lab) at Technical University of Catalonia - UPC BarcelonaTech.
 **************************************************************************************************/

#ifndef ACTIVITY_HANDLER_HPP
#define ACTIVITY_HANDLER_HPP

#include "prot.hpp"
#include "Activity.hpp"

class ActivityHandler
{
public:
    ActivityHandler(Agent* aptr);

    std::shared_ptr<Activity> getNextActivity(void) const;
    std::shared_ptr<Activity> getLastActivity(void) const;
    void add(std::shared_ptr<Activity> pa) { m_activities_own.push_back(pa); } /* TODO. */
    unsigned int count(std::string aid) const;

private:
    std::vector<std::shared_ptr<Activity> > m_activities_own;   /* Sorted by start time. */
    std::map<std::string, std::vector<std::shared_ptr<Activity> > > m_activities_others;
    std::string m_agent_id;
    Agent* m_agent;
};

#endif /* ACTIVITY_HANDLER_HPP */
